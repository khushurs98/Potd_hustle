'''
Given a binary tree, where every node value is a number. Find the sum of all the numbers that are formed from root to leaf paths. The formation of the numbers would be like 10*parent + current (see the examples for more clarification).
'''

#Solution Code

class Solution:
    def treePathSum(self, root):
        return self.calculateSum(root, 0)

    def calculateSum(self, node, currentValue):
        if not node:
            return 0
        currentValue = currentValue * 10 + node.data
        if not node.left and not node.right:
            return currentValue
        return (self.calculateSum(node.left, currentValue) +
                self.calculateSum(node.right, currentValue))
