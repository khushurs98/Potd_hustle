'''
Given an array arr[] and an integer k. Find the maximum for each and every contiguous subarray of size k.
Examples:
Input: k = 3, arr[] = [1, 2, 3, 1, 4, 5, 2, 3, 6]
Output: [3, 3, 4, 5, 5, 5, 6] 
'''

#Solution Code

import heapq

class Solution:
    def max_of_subarrays(self, k, arr):
        res = []
        maxHeap = []  

        for i in range(len(arr)):
            heapq.heappush(maxHeap, (-arr[i], i))
            while maxHeap[0][1] <= i - k:
                heapq.heappop(maxHeap)
            if i >= k - 1:
                res.append(-maxHeap[0][0])

        return res
