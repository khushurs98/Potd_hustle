'''
You are given a Linked List. Sort the given Linked List using quicksort. 
'''

#Solution code

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class Llist:
    def __init__(self):
        self.head = None

    def insert(self, data, tail):
        node = Node(data)
        if not self.head:
            self.head = node
            return node
        tail.next = node
        return node

def split(head):
    slow = head
    fast = head
    prev = None
    while fast and fast.next:
        prev = slow
        slow = slow.next
        fast = fast.next.next
    if prev:
        prev.next = None
    return slow

def merge(left, right):
    if not left:
        return right
    if not right:
        return left
    if left.data < right.data:
        left.next = merge(left.next, right)
        return left
    else:
        right.next = merge(left, right.next)
        return right

def mergeSort(head):
    if not head or not head.next:
        return head
    mid = split(head)
    left = mergeSort(head)
    right = mergeSort(mid)
    return merge(left, right)

def quickSort(head):
    return mergeSort(head)

